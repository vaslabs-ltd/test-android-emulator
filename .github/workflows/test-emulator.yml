name: Android Emulator Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  emulator-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up JDK 17 (required for Android SDK tools)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Set up Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: >-
            tools
            platform-tools
            emulator
            build-tools;35.0.0
            system-images;android-35;google_apis_playstore;x86_64
            platforms;android-35

      # Create an Android Virtual Device (AVD)
      - name: Create AVD
        run: $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd --name test_avd --package "system-images;android-35;google_apis_playstore;x86_64" --device "Nexus 5X" --force

      # Start the Android Emulator
      - name: Start Emulator
        run: |
          set -e

          # Set Android SDK paths
          ANDROID_HOME=${ANDROID_HOME:-/usr/local/lib/android/sdk}
          CMDLINE_TOOLS="$ANDROID_HOME/cmdline-tools/latest/bin"
          EMULATOR="$ANDROID_HOME/emulator"
          AVD_NAME="test_avd"
          SYSTEM_IMAGE="system-images;android-35;google_apis_playstore;x86_64"
          DEVICE="Nexus 5X"

          echo "===== Diagnostics ====="
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "PATH: $PATH"
          echo "User HOME: $HOME"
          echo ".android directory: $HOME/.android"
          ls -al "$HOME/.android"

          echo "===== Listing Installed System Images ====="
          "$CMDLINE_TOOLS/sdkmanager" --list | grep 'system-images'

          echo "===== Listing Available Devices ====="
          "$CMDLINE_TOOLS/avdmanager" list device

          echo "===== Listing Existing AVDs ====="
          "$CMDLINE_TOOLS/avdmanager" list avd

          echo "===== Creating AVD ====="
          echo "no" | "$CMDLINE_TOOLS/avdmanager" create avd \
            --name "$AVD_NAME" \
            --package "$SYSTEM_IMAGE" \
            --device "$DEVICE" \
            --force

          echo "===== Listing Updated AVDs ====="
          "$CMDLINE_TOOLS/avdmanager" list avd

          echo "===== Starting Emulator ====="
          "$EMULATOR/emulator" -avd "$AVD_NAME" -no-window -gpu swiftshader_indirect -verbose &

          echo "===== Checking Emulator Logs ====="
          sleep 10
          pgrep -a emulator
          adb devices

      # Check Emulator Status
      - name: Verify Emulator Boot
        run: adb shell getprop init.svc.bootanim | grep -e 'stopped'

      # Run Debugging Commands
      - name: Run Debug Commands
        run: |
          adb devices
          adb shell getprop ro.build.version.release
          adb shell uptime

      # Stop the Emulator
      - name: Stop Emulator
        run: adb emu kill
